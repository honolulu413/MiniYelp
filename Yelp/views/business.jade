// Jade file to specify output of an actors list
// Inherits from layoutPage

include ./includes/row_list.jade
include ./includes/header_for_page.jade

extend layoutPage
block header
  +extend_pageheader(userName)
  
block left
  panel.panel-info(style = "margin-bottom: 10px;")
    .panel-heading
      .panel-title Basic Information
    .page-body  
      +extend_row(business_profile)
      
      .row  
        .col-md-4
          form(method='post', action='/bing')
            input(type='hidden', name='BUSINESS_NAME', value='#{business[0]["NAME"]}') 
            input(type='hidden', name='BUSINESS_CITY', value='#{business[0]["CITY"]}') 
            input(type='hidden', name='BUSINESS_STATE', value='#{business[0]["STATE"]}') 
            button.btn.btn-info(type='submit', value='Search in Bing')
              span.glyphicon.glyphicon-search(aria-hidden='true')
                |&nbspBingSearch
              
        - if (!is_favorate)
          .col-md-4
            form(method='post', action='/favorite')
              input(type='hidden', name='BUSINESS_ID', value='#{business[0]["BUSINESS_ID"]}') 
              input(type='hidden', name='USER_NAME_ID', value='#{userName}') 
              button.btn.btn-danger(type='submit', value='Add to my favorites')
                span.glyphicon.glyphicon-heart(aria-hidden='true')
                
  .container  
    //Google map
    script(src="https://maps.googleapis.com/maps/api/js?v=3.exp")    
    script.
      var desti = new google.maps.LatLng(#{business[0].LATITUDE}, #{business[0].LONGITUDE});
      var map;
      function initialize() {
      if(navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
      var myPosition = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
      var mapOptions = { 
      center: myPosition,
      zoom: 16,
      mapTypeId:google.maps.MapTypeId.ROADMAP
      }
      map = new google.maps.Map(document.getElementById('googleMap'), mapOptions);

      var directionsDisplay = new google.maps.DirectionsRenderer();
      directionsDisplay.setMap(map);
        
      var request = {
      origin: myPosition,
      destination: desti,
      travelMode: google.maps.TravelMode.DRIVING
      };
        
      var directionsService = new google.maps.DirectionsService();
        
       
      directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
        
      var duration = response.routes.legs.duration.text;

      }
      });
       
        
      });
      } 
      }
      google.maps.event.addDomListener(window, 'load', initialize);
    p
      br
      br
      h3
        Google Maps
      #googleMap(style="width:420px; height:500px;")
      form(method='get', action='/google')
        input(type='hidden', name='LATITUDE', value='#{business[0].LATITUDE}') 
        input(type='hidden', name='LONGITUDE', value='#{business[0].LONGITUDE}') 
        input(type='text', name='address', placeholder="My current address") 
        input(type='submit', value='Search')
    //Google map
   

block content
  .container
    canvas#cvs(width='500', height='160')
    script.
      $(document).ready(function ()
      {
      var hbar = new RGraph.HBar({
      id: 'cvs',
      data: [#{reviewArray}],
      options: {
      background: {
      grid: false
      },
      xmax: #{maxReviewNumber},
      scale: {
      decimals: 1
      },
      colors: {
      self: ['#FFDE00'],
      sequential: true
      },
      labels: {
      self: ['5 star','4 star','3 star','2 star','1 star',],
      above: {
      self: true,
      decimals: 1
      }
      },
      noxaxis: true,
      gutter: {
      left: 60
      },
      xlabels: false
      }
      }).grow()
      })
  h3       
    span.label.label-success Top Positive Reviews:
  ul.list-group                      
    - for (var i = 0; i < goodRievew.length; i++)
      // Create a table with one row per result
      li.list-group-item
        ul
          li date:  #{goodRievew[i]["REVIEW_DATE"]}
          li review:  #{goodRievew[i]["REVIEW_TEXT"]}
          li star:  #{goodRievew[i]["STAR"]}
  
  //- h3 Top Positive Reviews:                     
  //-   - for (var i = 0; i < goodRievew.length; i++)
  //-     p data:  #{goodRievew[i]["REVIEW_DATE"]}
  //-     p review:  #{goodRievew[i]["REVIEW_TEXT"]}
  //-     p star:  #{goodRievew[i]["STAR"]}
  h3 
    span.label.label-danger Top Negative Reviews:
  ul.list-group                      
    - for (var i = 0; i < badReview.length; i++)
      // Create a table with one row per result
      li.list-group-item
        ul
          li date:  #{badReview[i]["REVIEW_DATE"]}
          li review:  #{badReview[i]["REVIEW_TEXT"]}
          li star:  #{badReview[i]["STAR"]}
  //- h3 Top badReview Reviews:                     
  //-   - for (var i = 0; i < badReview.length; i++)
  //-     p REVIEW_DATE:  #{badReview[i]["REVIEW_DATE"]}
  //-     p REVIEW_TEXT:  #{badReview[i]["REVIEW_TEXT"]}
  //-     p STAR:  #{badReview[i]["STAR"]}
  

block bottom
  h3 
    span.label.label-info You may also like: 
  p 
      +extend_row_array(similar_business_list)
  
